--
--CREATE TABLE CHECK_OUT (
--    BOOK_ID NUMBER NOT NULL,
--    USER_ID VARCHAR2(20) NOT NULL,
--    STATE VARCHAR2(20) NOT NULL,
--    CHECK_OUT_DATE DATE NOT NULL,
--    CHECK_IN_DATE DATE NOT NULL
--);
--
--ALTER TABLE CHECK_OUT ADD CONSTRAINT PK PRIMARY KEY(BOOK_ID);
--ALTER TABLE CHECK_OUT ADD CONSTRAINT FK1 
--FOREIGN KEY (USER_ID) REFERENCES USER_INFO(USER_ID);


--CREATE TRIGGER STATE_RESERVED_TRIGGER
--AFTER INSERT ON CHECK_OUT
--FOR EACH ROW
--BEGIN
--    UPDATE BOOK
--    SET BOOK.STATE = :NEW.STATE
--    WHERE BOOK.BOOK_ID = :NEW.BOOK_ID;
--END;
--COMMIT;


--CREATE TRIGGER STATE_DELETE_TRIGGER
--AFTER DELETE ON CHECK_OUT
--FOR EACH ROW
--BEGIN
--    UPDATE BOOK
--    SET STATE = 'SET'
--    WHERE BOOK_ID = :OLD.BOOK_ID;
--END;
--ALTER TABLE CHECK_OUT
--ADD CONSTRAINT PK PRIMARY KEY (BOOK_ID, STATE);

--SELECT TRIGGER_NAME, TABLE_NAME, TRIGGER_TYPE, TRIGGER_BODY
--FROM ALL_TRIGGERS
--WHERE TABLE_NAME = 'CHECK_OUT';


--SELECT C.BOOK_ID, B.STATE, C.CHECK_OUT_DATE, C.CHECK_IN_DATE, 
--B.NAME, B.WRITER, B.CATEGORY, C.STATE, B.IMAGE FROM CHECK_OUT C JOIN BOOK B ON C.BOOK_ID = B.BOOK_ID;
--
--CREATE TABLE BLACK_LIST (
--    USER_ID VARCHAR(20) PRIMARY KEY,
--    BAN_DATE DATE NOT NULL,
--    RELEASE_DATE DATE NOT NULL
--);

COMMIT;

BEGIN
DBMS_SCHEDULER.CREATE_JOB (
    JOB_NAME => 'TEST',
    JOB_TYPE => 'PLSQL_BLOCK',
    JOB_ACTION => 'BEGIN
        ;
        END;',
    START_DATE => SYSTIMESTAMP,
    REPEAT_INTERVAL => 'FREQ=SECONDLY;INTERVAL=10',
    ENABLE => TRUE
);
END;

